swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /pp-restapi/v4
tags:
  - name: otp-controller
    description: OTP Controller
  - name: payments-controller
    description: Payments Controller
  - name: psp-controller
    description: Psp Controller
  - name: resource-controller
    description: Resource Controller
  - name: transaction-controller
    description: Transaction Controller
  - name: users-controller
    description: Users Controller
  - name: wallet-controller
    description: Wallet Controller
produces:
  - application/json
paths:
  '/payments/{id}/actions/check':
    get:
      tags:
        - payments-controller
      summary: checkPayment
      operationId: checkPaymentUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PaymentResponse'
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Generic Error
  '/payments/{id}/actions/check-internal':
    get:
      tags:
        - payments-controller
      summary: getPayment
      operationId: getPaymentUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PaymentResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/payments/{id}/actions/delete':
    delete:
      tags:
        - payments-controller
      summary: deleteBySessionCookieExpired
      operationId: deleteBySessionCookieExpiredUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: koReason
          in: query
          description: koReason
          required: false
          type: string
        - name: showWallet
          in: query
          description: showWallet
          required: false
          type: boolean
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
  '/payments/{id}/actions/pay':
    post:
      tags:
        - payments-controller
      summary: 'valori authorizationCode: [ 00 - OK ] [ 02 - parametro duplicato ] [ 03 - formato messaggio errato, campo mancante o errato ][ 04 - MAC non corretto ] [ 06 - errore imprevisto durante l’elaborazione ][ 37 - codice di verifica mancante ] [ 40 - errore xml ] [ 41 - errore xml ] [ 98 - errore applicativo ] [ 99 - operazione fallita ]'
      operationId: payUsingPOST
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: payRequest
          description: payRequest
          required: true
          schema:
            $ref: '#/definitions/PayRequest'
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/payments/{id}/actions/pay3ds2':
    post:
      tags:
        - payments-controller
      summary: 'valori authorizationCode: [ 00 - OK ] [ 02 - parametro duplicato ] [ 03 - formato messaggio errato, campo mancante o errato ][ 04 - MAC non corretto ] [ 06 - errore imprevisto durante l’elaborazione ][ 37 - codice di verifica mancante ] [ 40 - errore xml ] [ 41 - errore xml ] [ 98 - errore applicativo ] [ 99 - operazione fallita ]'
      operationId: pay3ds2UsingPOST
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: payRequest
          description: payRequest
          required: true
          schema:
            $ref: '#/definitions/PayRequest'
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /psps:
    get:
      tags:
        - psp-controller
      summary: getPspList
      operationId: getPspListUsingGET
      parameters:
        - name: paymentType
          in: query
          description: paymentType
          required: true
          type: string
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
        - name: isList
          in: query
          description: to return only a result
          required: false
          type: boolean
          default: false
        - name: idWallet
          in: query
          description: idWallet
          required: false
          type: integer
        - name: idPayment
          in: query
          description: idPayment
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PspListResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Generic Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer: []
  '/psps/actions/get-buyer-bank/{idBuyer}':
    get:
      tags:
        - psp-controller
      summary: getBuyerBank
      operationId: getBuyerBankUsingGET
      parameters:
        - name: idBuyer
          in: path
          description: idBuyer
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BuyerBankResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/psps/actions/get-seller-bank/{idBuyer}':
    post:
      tags:
        - psp-controller
      summary: retrieveSellerBank
      operationId: retrieveSellerBankUsingPOST
      consumes:
        - application/json
      parameters:
        - name: idBuyer
          in: path
          description: idBuyer
          required: true
          type: integer
          format: int64
        - in: body
          name: sellerBanksRequest
          description: sellerBanksRequest
          required: true
          schema:
            $ref: '#/definitions/SellerBanksRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PspResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /psps/buyer-banks:
    get:
      tags:
        - psp-controller
      summary: getBuyerBankList
      operationId: getBuyerBankListUsingGET
      parameters:
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BuyerBankListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []

  '/psps/{id}':
    get:
      tags:
        - psp-controller
      summary: getPsp
      operationId: getPspUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PspResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /resources:
    get:
      tags:
        - resource-controller
      summary: getResources
      operationId: getResourcesUsingGET
      parameters:
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResourcesResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/resources/psp/{id}':
    get:
      tags:
        - resource-controller
      summary: getPspLogo
      operationId: getPspLogoUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/resources/service/img/pa-logo/{idLogo}':
    get:
      tags:
        - resource-controller
      summary: getLogoWithMediaType
      operationId: getLogoWithMediaTypeUsingGET
      parameters:
        - name: idLogo
          in: path
          description: idLogo
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/resources/service/img/{imgName}':
    get:
      tags:
        - resource-controller
      summary: getImageWithMediaType
      operationId: getImageWithMediaTypeUsingGET
      parameters:
        - name: imgName
          in: path
          description: imgName
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/resources/service/{id}':
    get:
      tags:
        - resource-controller
      summary: getServiceLogo
      operationId: getServiceLogoUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /transactions:
    get:
      tags:
        - transaction-controller
      summary: 'valori authorizationCode: [ 00 - OK ] [ 02 - parametro duplicato ] [ 03 - formato messaggio errato, campo mancante o errato ][ 04 - MAC non corretto ] [ 06 - errore imprevisto durante l’elaborazione ][ 37 - codice di verifica mancante ] [ 40 - errore xml ] [ 41 - errore xml ] [ 98 - errore applicativo ] [ 99 - operazione fallita ]'
      operationId: getTransactionsUsingGET
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionListRestApiResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/transactions/{id}':
    get:
      tags:
        - transaction-controller
      summary: 'valori authorizationCode: [ 00 - OK ] [ 02 - parametro duplicato ] [ 03 - formato messaggio errato, campo mancante o errato ][ 04 - MAC non corretto ] [ 06 - errore imprevisto durante l’elaborazione ][ 37 - codice di verifica mancante ] [ 40 - errore xml ] [ 41 - errore xml ] [ 98 - errore applicativo ] [ 99 - operazione fallita ]'
      operationId: getTransactionUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/transactions/{id}/actions/check':
    get:
      tags:
        - transaction-controller
      summary: checkStatus
      operationId: checkStatusUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionStatusResponse'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Generic Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/transactions/{id}/actions/resume':
    post:
      tags:
        - transaction-controller
      summary: resume
      operationId: resumeUsingPOST
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: resumeRequest
          description: resumeRequest
          required: true
          schema:
            $ref: '#/definitions/ResumeRequest'
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/transactions/{id}/actions/resume3ds2':
    post:
      tags:
        - transaction-controller
      summary: resume3ds2
      operationId: resume3ds2UsingPOST
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: resumeRequest
          description: resumeRequest
          required: true
          schema:
            $ref: '#/definitions/ResumeRequest'
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users:
    get:
      tags:
        - users-controller
      summary: getUser
      operationId: getUserUsingGET
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    put:
      tags:
        - users-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
        - application/json
      parameters:
        - in: body
          name: userRequest
          description: userRequest
          required: true
          schema:
            $ref: '#/definitions/UserRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/approve-terms:
    post:
      tags:
        - users-controller
      summary: approveTerms
      operationId: approveTermsUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: approveTermsRequest
          description: approveTermsRequest
          required: true
          schema:
            $ref: '#/definitions/ApproveTermsRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Generic Error
      security:
        - Bearer: []
  /users/actions/change-email:
    post:
      tags:
        - users-controller
      summary: changeEmail
      operationId: changeEmailUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: changeEmailRequest
          description: changeEmailRequest
          required: true
          schema:
            $ref: '#/definitions/ChangeEmailRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/change-phone:
    post:
      tags:
        - users-controller
      summary: changePhone
      operationId: changePhoneUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: changePhoneRequest
          description: changePhoneRequest
          required: true
          schema:
            $ref: '#/definitions/ChangePhoneRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/check-session:
    get:
      tags:
        - users-controller
      summary: checkSession
      operationId: checkSessionUsingGET
      parameters:
        - name: sessionToken
          in: query
          description: sessionToken
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/check-username-availability:
    get:
      tags:
        - users-controller
      summary: checkUsername
      operationId: checkUsernameUsingGET
      parameters:
        - name: username
          in: query
          description: username
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckUsernameResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/generate-reset-password:
    get:
      tags:
        - users-controller
      summary: generateResetPassword
      operationId: generateResetPasswordUsingGET
      parameters:
        - name: idPayment
          in: query
          description: idPayment
          required: false
          type: string
        - name: verifiedPuk
          in: query
          description: verifiedPuk
          required: false
          type: string
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VerifyUserResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/logic-delete-user:
    post:
      tags:
        - users-controller
      summary: logicDeletePendingUser
      operationId: logicDeletePendingUserUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: logicDeleteRequest
          description: logicDeleteRequest
          required: true
          schema:
            $ref: '#/definitions/LogicDeleteRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LogicDeleteResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/login:
    post:
      tags:
        - users-controller
      summary: login
      operationId: loginUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: loginRequest
          description: loginRequest
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/logout:
    post:
      tags:
        - users-controller
      summary: logout
      operationId: logoutUsingPOST
      consumes:
        - application/json
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/recovery:
    post:
      tags:
        - users-controller
      summary: recovery
      operationId: recoveryUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: recoveryRequest
          description: recoveryRequest
          required: true
          schema:
            $ref: '#/definitions/RecoveryRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/send-email-verification-token:
    get:
      tags:
        - users-controller
      summary: sendEmailVerificationToken
      operationId: sendEmailVerificationTokenUsingGET
      parameters:
        - name: email
          in: query
          description: email
          required: true
          type: string
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
          schema:
            type: string
            enum:
              - '100'
              - '101'
              - '102'
              - '103'
              - '200'
              - '201'
              - '202'
              - '203'
              - '204'
              - '205'
              - '206'
              - '207'
              - '208'
              - '226'
              - '300'
              - '301'
              - '302'
              - '303'
              - '304'
              - '305'
              - '307'
              - '308'
              - '400'
              - '401'
              - '402'
              - '403'
              - '404'
              - '405'
              - '406'
              - '407'
              - '408'
              - '409'
              - '410'
              - '411'
              - '412'
              - '413'
              - '414'
              - '415'
              - '416'
              - '417'
              - '418'
              - '419'
              - '420'
              - '421'
              - '422'
              - '423'
              - '424'
              - '426'
              - '428'
              - '429'
              - '431'
              - '451'
              - '500'
              - '501'
              - '502'
              - '503'
              - '504'
              - '505'
              - '506'
              - '507'
              - '508'
              - '509'
              - '510'
              - '511'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/send-otp:
    post:
      tags:
        - otp-controller
      summary: sendOtp
      operationId: sendOtpUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: sendOtpRequest
          description: sendOtpRequest
          required: true
          schema:
            $ref: '#/definitions/SendOtpRequest'
        - name: language
          in: query
          description: language
          required: false
          type: string
          default: it
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []

  /users/actions/start-session:
    post:
      tags:
        - users-controller
      summary: startSession
      operationId: startSessionUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: startSessionRequest
          description: startSessionRequest
          required: true
          schema:
            $ref: '#/definitions/StartSessionRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Session'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Generic Error
  '/users/actions/validate-bo-reset-password/{id}':
    get:
      tags:
        - users-controller
      summary: verifyAndUpdatePasswordValidation
      operationId: verifyAndUpdatePasswordValidationUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/users/actions/validate-bo-reset-puk/{id}':
    get:
      tags:
        - users-controller
      summary: verifyAndUpdatePukValidation
      operationId: verifyAndUpdatePukValidationUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/users/actions/validate-email/{id}':
    get:
      tags:
        - users-controller
      summary: emailValidation
      operationId: emailValidationUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: idPayment
          in: query
          description: idPayment
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/users/actions/validate-reset-password/{id}':
    get:
      tags:
        - users-controller
      summary: resetPasswordValidation
      operationId: resetPasswordValidationUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/verify-otp:
    post:
      tags:
        - otp-controller
      summary: verifyOtp
      operationId: verifyOtpUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: verifyOtpRequest
          description: verifyOtpRequest
          required: true
          schema:
            $ref: '#/definitions/VerifyOtpRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/verify-password:
    post:
      tags:
        - users-controller
      summary: verifyUserPassword
      operationId: verifyUserPasswordUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: verifyUserRequest
          description: verifyUserRequest
          required: true
          schema:
            $ref: '#/definitions/VerifyUserRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /users/actions/verify-puk:
    post:
      tags:
        - users-controller
      summary: verifyUserPuk
      operationId: verifyUserPukUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: verifyUserRequest
          description: verifyUserRequest
          required: true
          schema:
            $ref: '#/definitions/VerifyUserRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VerifyUserResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/users/byTransactionId/{transactionId}':
    get:
      tags:
        - users-controller
      summary: getUserByTransactionId
      operationId: getUserByTransactionIdUsingGET
      parameters:
        - name: transactionId
          in: path
          description: transactionId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /wallet:
    get:
      tags:
        - wallet-controller
      summary: getWallets
      operationId: getWalletsUsingGET
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    post:
      tags:
        - wallet-controller
      summary: addWallet
      operationId: addWalletUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: walletRequest
          description: walletRequest
          required: true
          schema:
            $ref: '#/definitions/WalletRequest'
        - name: language
          in: query
          description: language
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /wallet/actions/check-card-bin:
    post:
      tags:
        - wallet-controller
      summary: checkCardBin
      operationId: checkCardBinUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: checkCardBinRequest
          description: checkCardBinRequest
          required: true
          schema:
            $ref: '#/definitions/CheckCardBinRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckCardBinResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/wallet/byTransactionId/{transactionId}':
    get:
      tags:
        - wallet-controller
      summary: getWalletByTransactionId
      operationId: getWalletByTransactionIdUsingGET
      parameters:
        - name: transactionId
          in: path
          description: transactionId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /wallet/delete-contract:
    delete:
      tags:
        - wallet-controller
      summary: prepareDeleteContract
      operationId: prepareDeleteContractUsingDELETE
      parameters:
        - in: body
          name: idWallet
          description: idWallet
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
  /wallet/set-favorite:
    post:
      tags:
        - wallet-controller
      summary: setWalletFavorite
      operationId: setWalletFavoriteUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: idWallet
          description: idWallet
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  /wallet/set-visible:
    post:
      tags:
        - wallet-controller
      summary: setWalletVisible
      operationId: setWalletVisibleUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: idWallet
          description: idWallet
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/wallet/{id}':
    get:
      tags:
        - wallet-controller
      summary: getWallet
      operationId: getWalletUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: isBollo
          in: query
          description: isBollo
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    put:
      tags:
        - wallet-controller
      summary: updateWallet
      operationId: updateWalletUsingPUT
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: walletRequest
          description: walletRequest
          required: true
          schema:
            $ref: '#/definitions/WalletRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
    delete:
      tags:
        - wallet-controller
      summary: deleteWallet
      operationId: deleteWalletUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: []
  '/wallet/{id}/actions/confirm':
    post:
      tags:
        - wallet-controller
      summary: confirmWallet
      operationId: confirmWalletUsingPOST
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
  '/wallet/{id}/actions/favourite':
    post:
      tags:
        - wallet-controller
      summary: favouriteWallet
      operationId: favouriteWalletUsingPOST
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WalletResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Bearer: []
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Amount:
    type: object
    properties:
      amount:
        type: integer
      currency:
        type: string
      currencyNumber:
        type: string
      decimalDigits:
        type: integer
        format: int32
    title: Amount
  AppTransaction:
    type: object
    properties:
      size:
        type: integer
        format: int32
      start:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
      transactionsList:
        type: array
        items:
          $ref: '#/definitions/Transaction'
    title: AppTransaction
  ApproveTerms:
    type: object
    properties:
      privacy:
        type: boolean
      terms:
        type: boolean
    title: ApproveTerms
  ApproveTermsRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/ApproveTerms'
    title: ApproveTermsRequest
  BPay:
    type: object
    properties:
      bankName:
        type: string
      groupCode:
        type: string
      instituteCode:
        type: string
      nameObfuscated:
        type: string
      numberEncrypted:
        type: string
      numberObfuscated:
        type: string
      paymentInstruments:
        type: array
        items:
          $ref: '#/definitions/BPayPaymentInstrument'
      serviceState:
        type: string
      surnameObfuscated:
        type: string
      token:
        type: string
      uid:
        type: string
      uidHash:
        type: string
    title: BPay
  BPayPaymentInstrument:
    type: object
    properties:
      defaultReceive:
        type: boolean
      defaultSend:
        type: boolean
      ibanObfuscated:
        type: string
    title: BPayPaymentInstrument
  BuyerBank:
    type: object
    properties:
      alias:
        type: string
      id:
        type: integer
        format: int64
      participant:
        type: string
    title: BuyerBank
  BuyerBankListResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BuyerBanks'
    title: BuyerBankListResponse
  BuyerBankResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BuyerBank'
    title: BuyerBankResponse
  BuyerBanks:
    type: object
    properties:
      buyerBanks:
        type: array
        items:
          $ref: '#/definitions/BuyerBank'
      language:
        type: string
    title: BuyerBanks
  Card:
    type: object
    properties:
      abi:
        type: string
      cardNumber:
        type: string
      cardPartialNumber:
        type: string
      expiringDate:
        type: string
        format: date-time
      hpan:
        type: string
      productType:
        type: string
        enum:
          - PP
          - DEB
          - CRD
      tokens:
        type: array
        items:
          type: string
      validityState:
        type: string
        enum:
          - V
          - BR
    title: Card
  ChangeEmail:
    type: object
    properties:
      newEmail:
        type: string
      tokenPukVerified:
        type: string
    title: ChangeEmail
  ChangeEmailRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/ChangeEmail'
    title: ChangeEmailRequest
  ChangePhone:
    type: object
    properties:
      newCellphone:
        type: string
      tokenPukVerified:
        type: string
    title: ChangePhone
  ChangePhoneRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/ChangePhone'
    title: ChangePhoneRequest
  CheckCardBin:
    type: object
    properties:
      cardBin:
        type: string
      urlLogo:
        type: string
    title: CheckCardBin
  CheckCardBinRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/CheckCardBin'
    title: CheckCardBinRequest
  CheckCardBinResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/CheckCardBin'
    title: CheckCardBinResponse
  CheckUsername:
    type: object
    properties:
      available:
        type: boolean
      username:
        type: string
    title: CheckUsername
  CheckUsernameResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/CheckUsername'
    title: CheckUsernameResponse
  CreditCard:
    type: object
    properties:
      brand:
        type: string
      brandLogo:
        type: string
      expireMonth:
        type: string
      expireYear:
        type: string
      flag3dsVerified:
        type: boolean
      holder:
        type: string
      hpan:
        type: string
      id:
        type: integer
        format: int64
      onUs:
        type: boolean
      pan:
        type: string
      securityCode:
        type: string
    title: CreditCard
  Dettaglio:
    type: object
    properties:
      CCP:
        type: string
      IUV:
        type: string
      codicePagatore:
        type: string
      enteBeneficiario:
        type: string
      idDominio:
        type: string
      idPayment:
        type: string
      importo:
        type: number
      nomePagatore:
        type: string
      tipoPagatore:
        type: string
    title: Dettaglio
  Device:
    type: object
    properties:
      idDevice:
        type: integer
        format: int64
      idNotificationConfig:
        type: string
      idUser:
        type: integer
        format: int64
      os:
        type: string
        enum:
          - ANDROID
          - IOS
      scale:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ACTIVE
          - DISABLED
      token:
        type: string
      userAgent:
        type: string
    title: Device
  JiffyInfoPsp:
    type: object
    properties:
      codiceEsito:
        type: string
      numeroTelefonicoCriptato:
        type: string
      numeroTelefonicoOffuscato:
        type: string
      primitiva:
        type: string
    title: JiffyInfoPsp
  LogicDelete:
    type: object
    properties:
      email:
        type: string
      userStatusEnum:
        type: array
        items:
          type: string
          enum:
            - ANONYMOUS
            - REGISTERED
            - REGISTERED_SPID
            - REGISTERED_CIE
            - NEED_OTP
            - NEED_PASSWORD
            - WAITING_NEW_PASSWORD
            - DELETED
    title: LogicDelete
  LogicDeleteRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/LogicDelete'
    title: LogicDeleteRequest
  LogicDeleteResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/LogicDelete'
    title: LogicDeleteResponse
  Login:
    type: object
    properties:
      idPayment:
        type: string
      password:
        type: string
      spidToken:
        type: string
      username:
        type: string
    title: Login
  LoginRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/Login'
    title: LoginRequest
  Otp:
    type: object
    properties:
      value:
        type: string
    title: Otp
  Pay:
    type: object
    properties:
      cvv:
        type: string
      idWallet:
        type: integer
        format: int64
      mobileToken:
        type: string
      threeDSData:
        type: string
      tipo:
        type: string
    title: Pay
  PayRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/Pay'
    title: PayRequest
  Payment:
    type: object
    required:
      - amount
      - id
      - idPayment
    properties:
      amount:
        $ref: '#/definitions/Amount'
      bolloDigitale:
        type: boolean
      detailsList:
        type: array
        items:
          $ref: '#/definitions/Dettaglio'
      email:
        type: string
      fiscalCode:
        type: string
      iban:
        type: string
      id:
        type: integer
        format: int64
      idCarrello:
        type: string
      idPayment:
        type: string
      isCancelled:
        type: boolean
      origin:
        type: string
      receiver:
        type: string
      subject:
        type: string
      urlRedirectEc:
        type: string
    title: Payment
  PaymentResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/Payment'
    title: PaymentResponse
  Psp:
    type: object
    properties:
      appChannel:
        type: boolean
      businessName:
        type: string
      cancelled:
        type: boolean
      codiceAbi:
        type: string
      codiceConvenzione:
        type: string
      favoriteSellerCharge:
        type: integer
        format: int64
      fixedCost:
        $ref: '#/definitions/Amount'
      flagStamp:
        type: boolean
      id:
        type: integer
        format: int64
      idCard:
        type: integer
        format: int64
      idChannel:
        type: string
      idIntermediary:
        type: string
      idPsp:
        type: string
      isCancelled:
        type: boolean
      isDirectAcquirer:
        type: boolean
      isPspOnus:
        type: boolean
      jiffyInfoPsp:
        $ref: '#/definitions/JiffyInfoPsp'
      lingua:
        type: string
        enum:
          - IT
          - EN
          - FR
          - DE
          - SL
      logoPSP:
        type: string
      participant:
        type: string
      paymentModel:
        type: integer
        format: int64
      paymentType:
        type: string
      serviceAvailability:
        type: string
      serviceDescription:
        type: string
      serviceLogo:
        type: string
      serviceName:
        type: string
      solvedByPan:
        type: boolean
      tags:
        type: array
        items:
          type: string
          enum:
            - VISA
            - MASTERCARD
            - MAESTRO
            - VISA_ELECTRON
            - AMEX
            - OTHER
      urlInfoChannel:
        type: string
    title: Psp
  PspListResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/PspListResponseData'
    title: PspListResponse
  PspListResponseData:
    type: object
    properties:
      myBankSellerBankList:
        type: array
        items:
          type: integer
          format: int64
      pspList:
        type: array
        items:
          $ref: '#/definitions/Psp'
    title: PspListResponseData
  PspResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Psp'
    title: PspResponse
  Recovery:
    type: object
    properties:
      password:
        type: string
      puk:
        type: string
      repeatPassword:
        type: string
    title: Recovery
  RecoveryRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/Recovery'
    title: RecoveryRequest
  ResourcesResponse:
    type: object
    title: ResourcesResponse
    properties:
      is3ds2:
        type: string
      SPID_CALLBACK_URL:
        type: string
      urlImg:
        type: string
      creditCardPlaceholder:
        type: string
      termsAndConditions:
        type: string
  Resume:
    type: object
    properties:
      esito:
        type: string
      methodCompleted:
        type: string
      paRes:
        type: string
      xpay3DSResponse:
        $ref: '#/definitions/Xpay3DSResponse'
    title: Resume
  ResumeRequest:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/Resume'
    title: ResumeRequest
  SAMLAuthenticationRecordRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/SPIDAuthenticationRecord'
    title: SAMLAuthenticationRecordRequest
  SAMLAuthenticationRecordResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/SPIDAuthenticationRecord'
    title: SAMLAuthenticationRecordResponse
  SPIDAuthenticationRecord:
    type: object
    properties:
      createDate:
        type: string
        format: date-time
      destination:
        type: string
      inResponseToSPIDId:
        type: string
      issuer:
        type: string
      operation:
        type: string
      rawMessage:
        type: string
      result:
        type: string
      spidId:
        type: string
    title: SPIDAuthenticationRecord
  Satispay:
    type: object
    properties:
      hasMore:
        type: boolean
      token:
        type: string
      uidSatispay:
        type: string
      uidSatispayHash:
        type: string
    title: Satispay
  SelectedPspListResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/SelectedPspListResponseBody'
    title: SelectedPspListResponse
  SelectedPspListResponseBody:
    type: object
    properties:
      pspList:
        type: array
        items:
          $ref: '#/definitions/Psp'
    title: SelectedPspListResponseBody
  SellerBanksParams:
    type: object
    properties:
      iban:
        type: string
      idSellerChosen:
        type: integer
        format: int64
      language:
        type: string
      sellerBanksList:
        type: array
        items:
          type: integer
          format: int64
    title: SellerBanksParams
  SellerBanksRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/SellerBanksParams'
    title: SellerBanksRequest
  SendOtp:
    type: object
    properties:
      context:
        type: string
        enum:
          - SIGNIN
          - SIGNIN_PUK
          - LOGIN
          - VERIFY_EMAIL
          - RESET_PASSWORD
          - MODIFY_PHONE_NUMBER
          - MODIFY_EMAIL
          - REGISTERED_PAYMENT
          - PAYMENT_SUCCESS
          - PAYMENT_STORNO
      newReceiver:
        type: string
      provider:
        type: string
        enum:
          - EMAIL
          - SMS
          - PUSH
    title: SendOtp
  SendOtpRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/SendOtp'
    title: SendOtpRequest
  Session:
    type: object
    properties:
      idPayment:
        type: string
      sessionToken:
        type: string
      user:
        $ref: '#/definitions/User'
    title: Session
  SessionResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Session'
    title: SessionResponse
  SetPassword:
    type: object
    properties:
      password:
        type: string
      repeatPassword:
        type: string
      tokenPukVerified:
        type: string
      username:
        type: string
    title: SetPassword
  SetPasswordRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/SetPassword'
    title: SetPasswordRequest
  SpidSession:
    type: object
    properties:
      email:
        type: string
      fiscalCode:
        type: string
      name:
        type: string
      surname:
        type: string
      telephoneNumber:
        type: string
      token:
        type: string
      verified:
        type: boolean
    title: SpidSession
  SpidSessionResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/SpidSession'
    title: SpidSessionResponse
  StartSession:
    type: object
    required:
      - email
    properties:
      device:
        $ref: '#/definitions/Device'
      email:
        type: string
      fiscalCode:
        type: string
      idPayment:
        type: string
    title: StartSession
  StartSessionDto:
    type: object
    properties:
      sessionToken:
        type: string
      user:
        $ref: '#/definitions/StartSessionUser'
    title: StartSessionDto
  StartSessionRequest:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/StartSession'
    title: StartSessionRequest
  StartSessionResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/StartSessionDto'
    title: StartSessionResponse
  StartSessionUser:
    type: object
    properties:
      email:
        type: string
      status:
        type: string
        enum:
          - ANONYMOUS
          - REGISTERED
          - REGISTERED_SPID
          - REGISTERED_CIE
          - NEED_OTP
          - NEED_PASSWORD
          - WAITING_NEW_PASSWORD
          - DELETED
      username:
        type: string
    title: StartSessionUser
  StartSpidSession:
    type: object
    properties:
      spidSession:
        $ref: '#/definitions/SpidSession'
    title: StartSpidSession
  StartSpidSessionRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/StartSpidSession'
    title: StartSpidSessionRequest
  Transaction:
    type: object
    required:
      - idPayment
      - token
    properties:
      accountingStatus:
        type: integer
        format: int64
      amount:
        $ref: '#/definitions/Amount'
      authorizationCode:
        type: string
      created:
        type: string
        format: date-time
      description:
        type: string
      detailsList:
        type: array
        items:
          $ref: '#/definitions/Dettaglio'
      directAcquirer:
        type: boolean
      error:
        type: boolean
      fee:
        $ref: '#/definitions/Amount'
      grandTotal:
        $ref: '#/definitions/Amount'
      id:
        type: integer
        format: int64
      idPayment:
        type: integer
        format: int64
      idPsp:
        type: integer
        format: int64
      idStatus:
        type: integer
        format: int64
      idWallet:
        type: integer
        format: int64
      merchant:
        type: string
      nodoIdPayment:
        type: string
      numAut:
        type: string
      orderNumber:
        type: integer
        format: int64
      paymentCancelled:
        type: boolean
      paymentModel:
        type: integer
        format: int64
      rrn:
        type: string
      spcNodeDescription:
        type: string
      spcNodeStatus:
        type: integer
        format: int64
      statusMessage:
        type: string
      success:
        type: boolean
      token:
        type: string
      updated:
        type: string
        format: date-time
      urlCheckout3ds:
        type: string
      urlRedirectPSP:
        type: string
    title: Transaction
  TransactionListRestApiResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/AppTransaction'
    title: TransactionListRestApiResponse
  TransactionResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Transaction'
    title: TransactionResponse
  TransactionStatus:
    type: object
    properties:
      acsUrl:
        type: string
      authorizationCode:
        type: string
      expired:
        type: boolean
      finalStatus:
        type: boolean
      idPayment:
        type: string
      idStatus:
        type: integer
        format: int64
      idTransaction:
        type: integer
        format: int64
      methodUrl:
        type: string
      paymentOrigin:
        type: string
      result:
        type: string
      statusMessage:
        type: string
      threeDSMethodData:
        type: string
      params:
        $ref: '#/definitions/TransactionStatusParams' 
    title: TransactionStatus
  TransactionStatusParams:
    type: object
    required:
        - creq
    properties:
      creq:
        type: string  
  TransactionStatusResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/TransactionStatus'
    title: TransactionStatusResponse
  User:
    type: object
    properties:
      acceptTerms:
        type: boolean
      activationDate:
        type: string
        format: date-time
      cellphone:
        type: string
      cellphoneVerified:
        type: boolean
      email:
        type: string
      emailVerified:
        type: boolean
      fiscalCode:
        type: string
      name:
        type: string
      notificationEmail:
        type: string
      otp:
        $ref: '#/definitions/Otp'
      puk:
        type: string
      registeredDate:
        type: string
        format: date-time
      spidSessionId:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ANONYMOUS
          - REGISTERED
          - REGISTERED_SPID
          - REGISTERED_CIE
          - NEED_OTP
          - NEED_PASSWORD
          - WAITING_NEW_PASSWORD
          - DELETED
      surname:
        type: string
      temporaryCellphone:
        type: string
      username:
        type: string
    title: User
  UserRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/User'
    title: UserRequest
  UserResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/User'
    title: UserResponse
  VerifyOtp:
    type: object
    properties:
      context:
        type: string
        enum:
          - SIGNIN
          - SIGNIN_PUK
          - LOGIN
          - VERIFY_EMAIL
          - RESET_PASSWORD
          - MODIFY_PHONE_NUMBER
          - MODIFY_EMAIL
          - REGISTERED_PAYMENT
          - PAYMENT_SUCCESS
          - PAYMENT_STORNO
      otp:
        type: string
    title: VerifyOtp
  VerifyOtpRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/VerifyOtp'
    title: VerifyOtpRequest
  VerifyUser:
    type: object
    properties:
      acceptTerms:
        type: boolean
      activationDate:
        type: string
        format: date-time
      cellphone:
        type: string
      cellphoneVerified:
        type: boolean
      email:
        type: string
      emailVerified:
        type: boolean
      fiscalCode:
        type: string
      idPayment:
        type: string
      name:
        type: string
      newEmailReceiver:
        type: string
      notificationEmail:
        type: string
      otp:
        $ref: '#/definitions/Otp'
      password:
        type: string
      puk:
        type: string
      registeredDate:
        type: string
        format: date-time
      session:
        $ref: '#/definitions/Session'
      spidSessionId:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ANONYMOUS
          - REGISTERED
          - REGISTERED_SPID
          - REGISTERED_CIE
          - NEED_OTP
          - NEED_PASSWORD
          - WAITING_NEW_PASSWORD
          - DELETED
      surname:
        type: string
      temporaryCellphone:
        type: string
      tokenEMailVerify:
        type: string
      tokenEmailResetPassword:
        type: string
      tokenPukVerified:
        type: string
      username:
        type: string
      verifiedPuk:
        type: string
    title: VerifyUser
  VerifyUserRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/VerifyUser'
    title: VerifyUserRequest
  VerifyUserResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/VerifyUser'
    title: VerifyUserResponse
  Wallet:
    type: object
    properties:
      bPay:
        $ref: '#/definitions/BPay'
      bancomatCard:
        $ref: '#/definitions/Card'
      buyerBankName:
        type: string
      creditCard:
        $ref: '#/definitions/CreditCard'
      favourite:
        type: boolean
      idBuyerBank:
        type: integer
        format: int64
      idPagamentoFromEC:
        type: string
      idPsp:
        type: integer
        format: int64
      idWallet:
        type: integer
        format: int64
      isPspToIgnore:
        type: boolean
      jiffyCellphoneNumber:
        type: string
      lastUsage:
        type: string
        format: date-time
      matchedPsp:
        type: boolean
      onboardingChannel:
        type: string
      psp:
        $ref: '#/definitions/Psp'
      pspEditable:
        type: boolean
      pspListNotOnUs:
        type: array
        items:
          $ref: '#/definitions/Psp'
      registeredNexi:
        type: boolean
      satispay:
        $ref: '#/definitions/Satispay'
      saved:
        type: boolean
      services:
        type: array
        items:
          type: string
          enum:
            - pagoPA
            - BPD
            - FA
      type:
        type: string
        enum:
          - CREDIT_CARD
          - BANK_ACCOUNT
          - EXTERNAL_PS
    title: Wallet
  WalletListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Wallet'
    title: WalletListResponse
  WalletRequest:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/Wallet'
    title: WalletRequest
  WalletResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/Wallet'
    title: WalletResponse
  Xpay3DSResponse:
    type: object
    properties:
      codice:
        type: string
      esito:
        type: string
        enum:
          - OK
          - KO
      idOperazione:
        type: string
      mac:
        type: string
      messaggio:
        type: string
      resumeType:
        type: string
      timestamp:
        type: string
      xpayNonce:
        type: string
    title: Xpay3DSResponse
  ErrorResponse:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
